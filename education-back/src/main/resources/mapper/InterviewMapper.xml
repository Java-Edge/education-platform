<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javagpt.back.mapper.InterviewMapper">

    <resultMap id="BaseResultMap" type="com.javagpt.back.entity.InterviewEntity">
        <id property="id" column="id" jdbcType="INTEGER"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
       <result property="createAt" column="create_at" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,title,
        content,create_at
    </sql>


    <resultMap id="InterviewEntityMap" type="com.javagpt.back.entity.InterviewEntity">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="createAt" column="create_at" jdbcType="TIMESTAMP"/>
        <result property="jobId" column="job_id" jdbcType="INTEGER"/>
        <result property="careerName" column="career_name" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectByCondition" parameterType="com.javagpt.back.dto.InterviewDTO" resultMap="InterviewEntityMap">

        select interview.id                id,
        interview.title             title,
               LEFT(interview.content,20)   content,
        interview.create_at         create_at,
        interview.job_id            job_id,
        interview.content_type      content_type,
               career.name               career_name
        from interview_experience_article interview
                 left join career career on interview.job_id = career.id
        <where>
            <if test="dto.jobId != null and dto.jobId != ''">
                and interview.job_id = #{dto.jobId,jdbcType=INTEGER}
            </if>
            <if test="dto.content != null and dto.content != ''">
                and (interview.content like concat('%',#{dto.content,jdbcType=VARCHAR},'%')
                or interview.title like concat('%',#{dto.content,jdbcType=VARCHAR},'%'))
            </if>
            <if test="dto.company != null and dto.company.size > 0">
                and (
                <trim prefixOverrides="or">
                    <foreach collection="dto.company" item="company">
                        or interview.content like concat('%',#{company,jdbcType=VARCHAR},'%')
                    </foreach>
                </trim>
                )
            </if>
            <if test="dto.keyword != null and dto.keyword !=''">
                and (interview.title like concat('%', #{dto.keyword,jdbcType=VARCHAR},'%')
                         or
                interview.content  like concat('%', #{dto.keyword,jdbcType=VARCHAR},'%')
                    )
            </if>
        </where>
        order by interview.create_at desc
    </select>
</mapper>
