<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.javagpt.back.mapper.InnerRecommendMapper">

    <resultMap id="BaseResultMap" type="com.javagpt.back.entity.InnerRecommend">
            <result property="id" column="id" jdbcType="BIGINT"/>
            <result property="title" column="title" jdbcType="VARCHAR"/>
            <result property="content" column="content" jdbcType="VARCHAR"/>
            <result property="createAt" column="create_at" jdbcType="TIMESTAMP"/>
            <result property="jobId" column="job_id" jdbcType="INTEGER"/>
            <result property="contentType" column="content_type" jdbcType="INTEGER"/>
            <result property="pageView" column="page_view" jdbcType="INTEGER"/>
            <result property="recommendCode" column="recommend_code" jdbcType="VARCHAR"/>
            <result property="recommendEmail" column="recommend_email" jdbcType="VARCHAR"/>
            <result property="recommendUrl" column="recommend_url" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        id,title,
        content,create_at,
        job_id,content_type,page_view,recommend_code,recommend_email,
        recommend_url
    </sql>


    <resultMap id="innerRecommendMap" type="com.javagpt.back.entity.InnerRecommend">
        <id property="id" column="id" jdbcType="VARCHAR"/>
        <result property="title" column="title" jdbcType="VARCHAR"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="createAt" column="create_at" jdbcType="TIMESTAMP"/>
        <result property="jobId" column="job_id" jdbcType="INTEGER"/>
        <result property="contentType" column="content_type" jdbcType="INTEGER"/>
        <result property="careerName" column="career_name" jdbcType="VARCHAR"/>
        <result property="recommendCode" column="recommend_code" jdbcType="VARCHAR"/>
        <result property="recommendEmail" column="recommend_email" jdbcType="VARCHAR"/>
        <result property="recommendUrl" column="recommend_url" jdbcType="VARCHAR"/>
    </resultMap>

    <select id="selectByCondition" parameterType="com.javagpt.back.dto.InnerRecommendQueryDTO" resultMap="innerRecommendMap">

        select innner.id                id,
        innner.title             title,
        LEFT(innner.content,100)   content,
        innner.create_at         create_at,
        innner.job_id            job_id,
        innner.content_type      content_type,
        career.name               career_name,
        innner.recommend_code recommend_code,
        innner.recommend_email recommend_email,
        innner.recommend_url recommend_url
        from inner_recommend innner
        left join career career on innner.job_id = career.id
        <where>
            <if test="dto.jobId != null and dto.jobId != ''">
                and innner.job_id = #{dto.jobId,jdbcType=INTEGER}
            </if>
            <if test="dto.content != null and dto.content != ''">
                and (innner.content like concat('%',#{dto.content,jdbcType=VARCHAR},'%')
                or innner.title like concat('%',#{dto.content,jdbcType=VARCHAR},'%'))
            </if>
            <if test="dto.company != null and dto.company.size > 0">
                and (
                <trim prefixOverrides="or">
                    <foreach collection="dto.company" item="company">
                        or innner.content like concat('%',#{company,jdbcType=VARCHAR},'%')
                    </foreach>
                </trim>
                )
            </if>
            <if test="dto.keyword != null and dto.keyword !=''">
                and (innner.title like concat('%', #{dto.keyword,jdbcType=VARCHAR},'%')
                or
                innner.content  like concat('%', #{dto.keyword,jdbcType=VARCHAR},'%')
                )
            </if>
        </where>
        order by innner.create_at desc
    </select>

</mapper>
